/*! circle-ds
https://github.com/havelessbemore/circle-ds

MIT License

Copyright (C) 2024-2024 Michael Rojas <dev.michael.rojas@gmail.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. */
"use strict";var ft=Object.defineProperty;var at=(n,r,t)=>r in n?ft(n,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[r]=t;var v=(n,r,t)=>(at(n,typeof r!="symbol"?r+"":r,t),t);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const x={Overflow:"overflow"};function ct(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}var rt={exports:{}};(function(n){var r=Object.prototype.hasOwnProperty,t="~";function s(){}Object.create&&(s.prototype=Object.create(null),new s().__proto__||(t=!1));function i(_,l,u){this.fn=_,this.context=l,this.once=u||!1}function e(_,l,u,f,y){if(typeof u!="function")throw new TypeError("The listener must be a function");var w=new i(u,f||_,y),g=t?t+l:l;return _._events[g]?_._events[g].fn?_._events[g]=[_._events[g],w]:_._events[g].push(w):(_._events[g]=w,_._eventsCount++),_}function h(_,l){--_._eventsCount===0?_._events=new s:delete _._events[l]}function o(){this._events=new s,this._eventsCount=0}o.prototype.eventNames=function(){var l=[],u,f;if(this._eventsCount===0)return l;for(f in u=this._events)r.call(u,f)&&l.push(t?f.slice(1):f);return Object.getOwnPropertySymbols?l.concat(Object.getOwnPropertySymbols(u)):l},o.prototype.listeners=function(l){var u=t?t+l:l,f=this._events[u];if(!f)return[];if(f.fn)return[f.fn];for(var y=0,w=f.length,g=new Array(w);y<w;y++)g[y]=f[y].fn;return g},o.prototype.listenerCount=function(l){var u=t?t+l:l,f=this._events[u];return f?f.fn?1:f.length:0},o.prototype.emit=function(l,u,f,y,w,g){var d=t?t+l:l;if(!this._events[d])return!1;var a=this._events[d],S=arguments.length,N,m;if(a.fn){switch(a.once&&this.removeListener(l,a.fn,void 0,!0),S){case 1:return a.fn.call(a.context),!0;case 2:return a.fn.call(a.context,u),!0;case 3:return a.fn.call(a.context,u,f),!0;case 4:return a.fn.call(a.context,u,f,y),!0;case 5:return a.fn.call(a.context,u,f,y,w),!0;case 6:return a.fn.call(a.context,u,f,y,w,g),!0}for(m=1,N=new Array(S-1);m<S;m++)N[m-1]=arguments[m];a.fn.apply(a.context,N)}else{var ut=a.length,$;for(m=0;m<ut;m++)switch(a[m].once&&this.removeListener(l,a[m].fn,void 0,!0),S){case 1:a[m].fn.call(a[m].context);break;case 2:a[m].fn.call(a[m].context,u);break;case 3:a[m].fn.call(a[m].context,u,f);break;case 4:a[m].fn.call(a[m].context,u,f,y);break;default:if(!N)for($=1,N=new Array(S-1);$<S;$++)N[$-1]=arguments[$];a[m].fn.apply(a[m].context,N)}}return!0},o.prototype.on=function(l,u,f){return e(this,l,u,f,!1)},o.prototype.once=function(l,u,f){return e(this,l,u,f,!0)},o.prototype.removeListener=function(l,u,f,y){var w=t?t+l:l;if(!this._events[w])return this;if(!u)return h(this,w),this;var g=this._events[w];if(g.fn)g.fn===u&&(!y||g.once)&&(!f||g.context===f)&&h(this,w);else{for(var d=0,a=[],S=g.length;d<S;d++)(g[d].fn!==u||y&&!g[d].once||f&&g[d].context!==f)&&a.push(g[d]);a.length?this._events[w]=a.length===1?a[0]:a:h(this,w)}return this},o.prototype.removeAllListeners=function(l){var u;return l?(u=t?t+l:l,this._events[u]&&h(this,u)):(this._events=new s,this._eventsCount=0),this},o.prototype.off=o.prototype.removeListener,o.prototype.addListener=o.prototype.on,o.prefixed=t,o.EventEmitter=o,n.exports=o})(rt);var vt=rt.exports;const pt=ct(vt);class W{constructor(r=new pt){v(this,"_emitter");this._emitter=r}addListener(r,t){return this._emitter.addListener(r,t),this}on(r,t){return this._emitter.on(r,t),this}removeListener(r,t){return this._emitter.removeListener(r,t),this}}const M=16383,j=4294967295,F=Number.MAX_SAFE_INTEGER;function nt(n){return Number.isInteger(n)&&n>=0&&n<=j}function O(n){return n===Number.POSITIVE_INFINITY}function zt(n){return typeof(n==null?void 0:n[Symbol.iterator])=="function"}function B(n){return Number.isInteger(n)&&n>=0&&n<=F}function P(n){return typeof n=="number"}function q(n){return Number.isSafeInteger(n)&&n>=0}function p(n,r,t=0){return n>=t?n:n+r}function z(n,r,t){if(r>t)throw new RangeError("Invalid clamp range; min must be <= max");return n<=r?r:n<=t?n:t}function I(n,r,t){return n>=r&&n<t}function yt(n,r){return n>=0&&r>0?Math.log(n)/Math.log(r):NaN}function gt(n,r=1/0,t=Math.random){let s=0;for(;s<r&&t()<n;)++s;return s}function c(n,r=0){return n=+n,isNaN(n)?r:Math.trunc(n)}function*A(n,r){if(r<1)return;let t=[];r=Math.trunc(r);for(const s of n)t.push(s)>=r&&(yield t,t=[]);t.length>0&&(yield t)}class k extends W{constructor(t){super();v(this,"_capacity");v(this,"_head");v(this,"_isFinite");v(this,"_next");v(this,"_size");v(this,"_vals");if(this._capacity=j,this._head=0,this._isFinite=!1,this._size=0,this._next=0,this._vals=[],t!=null){if(P(t)){this.capacity=t;return}for(const s of A(t,M))this._insert(this._size,s);this._capacity=this._size,this._isFinite=!0}}get capacity(){return this._isFinite?this._capacity:1/0}get size(){return this._size}get[Symbol.toStringTag](){return k.name}set capacity(t){if(t=+t,O(t))t=j,this._isFinite=!1;else if(nt(t))this._isFinite=!0;else throw new RangeError("Invalid capacity");this._size<=0?(this._capacity=t,this.clear()):t<this._capacity?this._shrink(t):t>this._capacity&&this._grow(t)}at(t){if(t=p(c(t,-1/0),this._size),!!I(t,0,this._size))return this._vals[this._toIndex(t)]}clear(){this._size=0,this._head=0,this._next=0,this._vals.length=0}_copyWithin(t,s,i){if(t==s||s>=i)return;const e=this._capacity-1,h=this._vals,o=this._toRanges(s,i);if(t<=s||i<=t){t=this._toIndex(t);for(const[_,l]of o)for(let u=_;u<l;++u)h[t]=h[u],t=t<e?t+1:0}else{t=this._toIndex(t+(i-s));for(const[_,l]of o.reverse())for(let u=l-1;u>=_;--u)t=t>0?t-1:e,h[t]=h[u]}}delete(t){return t=p(c(t,-1/0),this._size),I(t,0,this._size)?(this._delete(t,1),!0):!1}_delete(t,s){this._copyWithin(t,t+s,this._size),this._pop(s)}*entries(){for(let t=0;t<this._size;++t)yield[t,this._vals[this._toIndex(t)]]}fill(t,s,i){const e=this._size;return s=z(p(c(s,0),e),0,e),i=z(p(c(i,e),e),s,e),this._fill(t,s,i),this}_fill(t,s,i){for(const[e,h]of this._toRanges(s,i))this._vals.fill(t,e,h)}first(){return this._size>0?this._vals[this._head]:void 0}forEach(t,s){const i=this._size;for(let e=0;e<i&&e<this._size;++e){const h=this._vals[this._toIndex(e)];t.call(s,h,e,this)}}has(t){const s=this._vals;for(const[i,e]of this._toRanges(0,this._size))for(let h=i;h<e;++h)if(t===s[h])return!0;return!1}*keys(){for(let t=0;t<this._size;++t)yield t}last(){return this._size>0?this._vals[this._toIndex(this._size-1)]:void 0}pop(){if(this._size<=0)return;const t=this._vals[this._toIndex(this._size-1)];return this._pop(1),t}_pop(t){const s=this._size-t;this._fill(void 0,s,this._size),this._next=this._toIndex(s),this._size=s}push(...t){return t.length<=0?this._size:this._capacity<=0?(this._overflow(t),this._size):(this._insert(this._size,t),this._size)}set(t,s){if(t=p(c(t,-1/0),this._size),!I(t,0,this._size))return;t=this._toIndex(t);const i=this._vals[t];return this._vals[t]=s,i}shift(){if(this._size<=0)return;const t=this._vals[this._head];return this._shift(1),t}_shift(t){this._fill(void 0,0,t),this._head=this._toIndex(t),this._size-=t}slice(t,s){const i=this._size;return t=z(p(c(t,0),i),0,i),s=z(p(c(s,i),i),t,i),this._toList(this._slice(t,s))}_slice(t,s){const i=this._vals,e=new Array(s-t);let h=0;for([t,s]of this._toRanges(t,s))for(let o=t;o<s;++o)e[h++]=i[o];return e}splice(t,s,...i){const e=this._size;t=z(p(c(t,0),e),0,e),s=z(c(s,0),0,e-t);const h=this._toList(this._slice(t,t+s));return this._splice(t,s,i),h}_splice(t,s,i=[]){const e=i.length,h=Math.min(s,e),o=this._vals;let _=0;for(const[l,u]of this._toRanges(t,t+h))for(let f=l;f<u;++f)o[f]=i[_++];s!=e&&(t+=h,s<e?this._insert(t,i,h):this._delete(t,s-e))}_insert(t,s,i=0,e=s.length){const h=e-i;let o=this._capacity-this._size;if(o>=h){this._safeInsert(t,s,i,e);return}if(!this._isFinite)throw this._safeInsert(t,s,i,i+o),new Error("Out of memory");if(t>0){const l=Math.min(t,h-o);this._overflow(this._slice(0,l)),this._shift(l),t-=l,o+=l}if(o>=h){this._safeInsert(t,s,i,e);return}const _=e-o;this._overflow(s.slice(i,_)),this._safePresert(0,s,_,e)}_safeInsert(t,s,i=0,e=s.length){const h=e-i,o=this._vals;this._copyWithin(t+h,t,this._size);for(const[_,l]of this._toRanges(t,t+h))for(let u=_;u<l;++u)o[u]=s[i++];this._size+=h,this._next=this._toIndex(this._size)}[Symbol.iterator](){return this.values()}unshift(...t){return t.length<=0?this._size:this._capacity<=0?(this._overflow(t),this._size):(this._presert(0,t),this._size)}_presert(t,s,i=0,e=s.length){const h=e-i;let o=this._capacity-this._size;if(o>=h){this._safePresert(t,s,i,e);return}if(!this._isFinite)throw this._safePresert(t,s,e-o,e),new Error("Out of memory");if(t<this._size){const l=Math.min(this._size-t,h-o);this._overflow(this._slice(this._size-l,this._size)),this._pop(l),o+=l}if(o>=h){this._safePresert(t,s,i,e);return}const _=i+o;this._overflow(s.slice(_,e)),this._safeInsert(this._size,s,i,_)}_safePresert(t,s,i=0,e=s.length){const h=this._capacity,o=e-i,_=this._vals,l=h-o;this._copyWithin(l,0,t),t+=l;for(const[u,f]of this._toRanges(t,t+o))for(let y=u;y<f;++y)_[y]=s[i++];this._size+=o,this._head=this._toIndex(l)}*values(){for(let t=0;t<this._size;++t)yield this._vals[this._toIndex(t)]}_overflow(t){this._emitter.emit(x.Overflow,t)}_grow(t){if(this._isSequential()){this._sequentialReset(t);return}if(this._size<=this._head){const s=this._size-this._next;this._vals.copyWithin(s,0,this._next),this._vals.copyWithin(0,this._head,this._head+s),this._vals.length=this._size,this._head=0,this._next=this._size}else if(this._head+this._size<=t)this._vals.length=this._head+this._size,this._vals.copyWithin(this._capacity,0,this._next),this._vals.fill(void 0,0,this._next),this._next=(this._head+this._size)%t;else{const s=t-this._capacity;this._vals.length=t,this._vals.copyWithin(this._capacity,0,s),this._vals.copyWithin(0,s,this._next);const i=Math.max(s,this._next-s);this._vals.fill(void 0,i,this._next),this._next-=s}this._capacity=t}_isSequential(){return this._head<this._next||this._next<=0}_sequentialReset(t){const s=this._head+this._size;return s<=t?(this._vals.length=s,this._next=this._vals.length%t):this._head>=t?(this._vals.copyWithin(0,this._head,s),this._vals.length=this._size,this._head=0,this._next=this._size%t):(this._vals.copyWithin(0,t,s),this._vals.length=t,this._next=s-t),this._capacity=t,!0}_shrink(t){if(this._size>t){const i=this._size-t;this._overflow(this._slice(0,i)),this._shift(i)}if(this._isSequential()){this._sequentialReset(t);return}const s=this._capacity-t;this._vals.copyWithin(this._head-s,this._head,this._capacity),this._vals.length=t,this._head-=s,this._capacity=t}_toIndex(t){return(this._head+t)%this._capacity}_toList(t){const s=new k(0);return s._vals=t,s._size=t.length,s._capacity=t.length,s}_toRanges(t,s){const i=this._head,e=this._capacity-i;return s<=e?[[i+t,i+s]]:t>=e?[[t-e,s-e]]:[[i+t,this._capacity],[0,s-e]]}}class H{constructor(r){v(this,"_list");this._list=new k(r)}get capacity(){return this._list.capacity}get size(){return this._list.size}get[Symbol.toStringTag](){return H.name}set capacity(r){this._list.capacity=r}clear(){this._list.clear()}entries(){return this._list.entries()}first(){return this._list.first()}forEach(r,t){return this._list.forEach((s,i)=>r.call(t,s,i,this))}front(){return this._list.first()}has(r){return this._list.has(r)}keys(){return this._list.keys()}last(){return this._list.last()}pop(){return this._list.pop()}push(...r){return this._list.push(...r)}shift(){return this._list.shift()}[Symbol.iterator](){return this._list.values()}top(){return this._list.last()}unshift(...r){return this._list.unshift(...r)}values(){return this._list.values()}addListener(r,t){return this._list.addListener(r,t),this}on(r,t){return this._list.on(r,t),this}removeListener(r,t){return this._list.removeListener(r,t),this}}function wt(n,r){const t={value:void 0};let s=0,i=t;for(;n!=null&&s<r;){const e={value:n.value};i.next=e,i=e,++s,n=n.next}return i.next=void 0,{root:t,size:s,tail:i}}function G(n,r){const t={value:void 0};if(n==null||r<=0)return{root:t,size:0,tail:t};const s=n.next,i=X(s,r-1);return n.next=i.next,i.next=void 0,t.next=s,{root:t,size:r,tail:i}}function*ht(n){for(let r=0;n!=null;++r)yield[r,n.value],n=n.next}function X(n,r){if(!(r<0)){for(let t=0;n!=null&&t<r;++t)n=n.next;return n}}function ot(n,r){for(;n!=null;){if(n.value===r)return!0;n=n.next}return!1}function*lt(n){for(let r=0;n!=null;++r)yield r,n=n.next}function mt(n){const r={value:void 0};let t=0,s=r;for(const i of n)s.next={value:i},s=s.next,++t;return s.next=void 0,{root:r,size:t,tail:s}}function*L(n){for(;n!=null;)yield n.value,n=n.next}function xt(n,r){const t={value:void 0};if(n==null||r<=0)return{root:t,size:0,tail:t};let s=0,i=t;for(;n!=null&&s<r;){const e={value:n.value};i.next=e,e.prev=i,i=e,++s,n=n.next}return t.prev=void 0,i.next=void 0,{root:t,size:s,tail:i}}function tt(n,r){const t=G(n,r);if(t.size<=0)return t;t.root.next.prev=t.root;const s=n.next;return s!=null&&(s.prev=n),t}function st(n,r){if(r>=0)return X(n,r);for(let t=0;n!=null&&t>r;--t)n=n.prev;return n}function It(n){const r={value:void 0};let t=0,s=r;for(const i of n)s.next={prev:s,value:i},s=s.next,++t;return r.prev=void 0,s.next=void 0,{root:r,size:t,tail:s}}class E extends W{constructor(t){super();v(this,"_capacity");v(this,"_isFinite");v(this,"_root");v(this,"_size");v(this,"_tail");if(this._capacity=F,this._isFinite=!1,this._root={value:void 0},this._size=0,this._tail=this._root,t!=null){if(P(t)){this.capacity=t;return}for(const s of A(t,M))this._insert(this._size,s);this._capacity=this._size,this._isFinite=!0}}get capacity(){return this._isFinite?this._capacity:1/0}get size(){return this._size}get[Symbol.toStringTag](){return E.name}set capacity(t){if(t=+t,t=+t,O(t))t=F,this._isFinite=!1;else if(B(t))this._isFinite=!0;else throw new RangeError("Invalid capacity");if(this._capacity=t,this._size<=t)return;const s=this._size-t,{root:i}=tt(this._root,s);this._size-=s,this._size<=0&&(this._tail=this._root);for(const e of A(L(i.next),M))this._overflow(e)}at(t){if(t=p(c(t,-1/0),this._size),!!I(t,0,this._size))return this._get(t).value}clear(){this._size=0,this._tail=this._root,this._root.next=void 0}delete(t){if(t=p(c(t,-1/0),this._size),!I(t,0,this._size))return!1;const s=this._get(t);return s.prev.next=s.next,s.next!=null&&(s.next.prev=s.prev),--this._size,!0}entries(){return ht(this._root.next)}fill(t,s,i){s=c(s,0),s=z(p(s,this._size),0,this._size),i=c(i,this._size),i=z(p(i,this._size),0,this._size);let e=this._get(s);for(;s<i;)e.value=t,e=e.next,++s;return this}forEach(t,s){let i=this._root;for(let e=0;e<this._size;++e)i=i.next,t.call(s,i.value,e,this)}has(t){return ot(this._root.next,t)}keys(){return lt(this._root.next)}pop(){if(this._size<=0)return;const{root:t}=this._cut(this._size-1,1);return t.next.value}push(...t){return this._insert(this._size,t),this._size}set(t,s){if(t=p(c(t,-1/0),this._size),!I(t,0,this._size))return;const i=this._get(t),e=i.value;return i.value=s,e}shift(){if(this._size<=0)return;const{root:t}=this._cut(0,1);return t.next.value}slice(t,s){const i=this._size;if(t=z(p(c(t,0),i),0,i),s=z(p(c(s,i),i),t,i),t>=s)return new E(0);const e=this._get(t),h=xt(e,s-t),o=new E(h.size);return o._root=h.root,o._size=h.size,o._tail=h.tail,o}splice(t,s,...i){const e=this._size;t=z(p(c(t,0),e),0,e),s=z(c(s,0),0,e-t);let h;if(s<=0)h=new E(0);else{const{root:o,size:_,tail:l}=this._cut(t,s);h=new E(_),h._root=o,h._size=_,h._tail=l}return this._insert(t,i),h}[Symbol.iterator](){return L(this._root.next)}unshift(...t){return this._presert(0,t),this._size}values(){return L(this._root.next)}_cut(t,s){const i=this._get(t-1),e=tt(i,s);return this._size-=s,t>=this._size&&(this._tail=i),e}_get(t){const s=this._size/2;return++t<=s?st(this._root,t):st(this._tail,t-this._size)}_insert(t,s){const i=s.length;if(i<=0)return;if(this._capacity<=0){this._overflow(s);return}let e=this._capacity-this._size;if(e>=i){this._safeInsert(t,s);return}if(!this._isFinite)throw this._safeInsert(t,s.slice(0,e)),new Error("Out of memory");if(t>0){const o=Math.min(t,i-e),{root:_}=this._cut(0,o);this._overflow(L(_.next)),t-=o,e+=o}if(e>=i){this._safeInsert(t,s);return}const h=s.length-e;this._overflow(s.slice(0,h)),this._safeInsert(0,s.slice(h))}_overflow(t){Array.isArray(t)||(t=Array.from(t)),this._emitter.emit(x.Overflow,t)}_presert(t,s){const i=s.length;if(i<=0)return;if(this._capacity<=0){this._overflow(s);return}let e=this._capacity-this._size;if(e>=i){this._safeInsert(t,s);return}if(!this._isFinite)throw this._safeInsert(0,s.slice(s.length-e)),new Error("Out of memory");if(t<this._size){const h=Math.min(this._size-t,i-e),{root:o}=this._cut(this._size-h,h);this._overflow(L(o.next)),e+=h}if(e>=i){this._safeInsert(t,s);return}this._overflow(s.slice(e)),this._safeInsert(this._size,s.slice(0,e))}_safeInsert(t,s){if(s.length<=0)return;const{root:i,size:e,tail:h}=It(s),o=i.next,_=this._get(t-1),l=_.next;o.prev=_,h.next=l,_.next=o,l!=null&&(l.prev=h),this._tail=t<this._size?this._tail:h,this._size+=e}}class Q{constructor(r){v(this,"_list");this._list=new E(r)}get capacity(){return this._list.capacity}get size(){return this._list.size}get[Symbol.toStringTag](){return Q.name}set capacity(r){this._list.capacity=r}first(){return this._list.at(0)}front(){return this._list.at(0)}clear(){this._list.clear()}entries(){return this._list.entries()}forEach(r,t){this._list.forEach((s,i)=>r.call(t,s,i,this),t)}has(r){return this._list.has(r)}keys(){return this._list.keys()}last(){return this._list.at(-1)}pop(){return this._list.pop()}push(...r){return this._list.push(...r)}shift(){return this._list.shift()}[Symbol.iterator](){return this.values()}top(){return this._list.at(-1)}unshift(...r){return this._list.unshift(...r)}values(){return this._list.values()}addListener(r,t){return this._list.addListener(r,t),this}on(r,t){return this._list.on(r,t),this}removeListener(r,t){return this._list.removeListener(r,t),this}}class b extends W{constructor(t){super();v(this,"_capacity");v(this,"_isFinite");v(this,"_root");v(this,"_size");v(this,"_tail");if(this._capacity=F,this._isFinite=!1,this._root={value:void 0},this._size=0,this._tail=this._root,t!=null){if(P(t)){this.capacity=t;return}for(const s of A(t,M))this._insert(this._size,s);this._capacity=this._size,this._isFinite=!0}}get capacity(){return this._isFinite?this._capacity:1/0}get size(){return this._size}get[Symbol.toStringTag](){return b.name}set capacity(t){if(t=+t,O(t))t=F,this._isFinite=!1;else if(B(t))this._isFinite=!0;else throw new RangeError("Invalid capacity");if(this._capacity=t,this._size<=t)return;const s=this._size-t,{root:i}=G(this._root,s);this._size-=s,this._size<=0&&(this._tail=this._root),this._overflow(i.next)}at(t){if(t=p(c(t,-1/0),this._size),!!I(t,0,this._size))return this._get(t).value}clear(){this._size=0,this._tail=this._root,this._root.next=void 0}delete(t){return t=p(c(t,-1/0),this._size),I(t,0,this._size)?(this._cut(t,1),!0):!1}entries(){return ht(this._root.next)}fill(t,s,i){const e=this._size;if(s=z(p(c(s,0),e),0,e),i=z(p(c(i,e),e),s,e),s>=i)return this;let h=this._get(s);for(let o=s;o<i;++o)h.value=t,h=h.next;return this}forEach(t,s){let i=this._root;for(let e=0;e<this._size;++e)i=i.next,t.call(s,i.value,e,this)}has(t){return ot(this._root.next,t)}keys(){return lt(this._root.next)}pop(){if(this._size<=0)return;const{root:t}=this._cut(this._size-1,1);return t.next.value}push(...t){return this._insert(this._size,t),this._size}set(t,s){if(t=p(c(t,-1/0),this._size),!I(t,0,this._size))return;const i=this._get(t),e=i.value;return i.value=s,e}shift(){if(this._size<=0)return;const{root:t}=this._cut(0,1);return t.next.value}slice(t,s){const i=this._size;if(t=z(p(c(t,0),i),0,i),s=z(p(c(s,i),i),t,i),t>=s)return new b(0);const e=this._get(t),h=wt(e,s-t),o=new b(h.size);return o._root=h.root,o._size=h.size,o._tail=h.tail,o}splice(t,s,...i){const e=this._size;t=z(p(c(t,0),e),0,e),s=z(c(s,0),0,e-t);let h;if(s<=0)h=new b(0);else{const{root:o,size:_,tail:l}=this._cut(t,s);h=new b(s),h._root=o,h._size=_,h._tail=l}return this._insert(t,i),h}[Symbol.iterator](){return L(this._root.next)}unshift(...t){return this._presert(0,t),this._size}values(){return L(this._root.next)}_cut(t,s){const i=this._get(t-1),e=G(i,s);return this._size-=s,t>=this._size&&(this._tail=i),e}_get(t){return++t==this._size?this._tail:X(this._root,t)}_insert(t,s){const i=s.length;if(i<=0)return;if(this._capacity<=0){this._overflow(s);return}let e=this._capacity-this._size;if(e>=i){this._safeInsert(t,s);return}if(!this._isFinite)throw this._safeInsert(t,s.slice(0,e)),new Error("Out of memory");if(t>0){const o=Math.min(t,i-e),{root:_}=this._cut(0,o);this._overflow(_.next),t-=o,e+=o}if(e>=i){this._safeInsert(t,s);return}const h=s.length-e;this._overflow(s.slice(0,h)),this._safeInsert(0,s.slice(h))}_overflow(t){if(t!=null){if(Array.isArray(t)){this._emitter.emit(x.Overflow,t);return}for(const s of A(L(t),M))this._emitter.emit(x.Overflow,s)}}_presert(t,s){const i=s.length;if(i<=0)return;if(this._capacity<=0){this._overflow(s);return}let e=this._capacity-this._size;if(e>=i){this._safeInsert(t,s);return}if(!this._isFinite)throw this._safeInsert(0,s.slice(s.length-e)),new Error("Out of memory");if(t<this._size){const h=Math.min(this._size-t,i-e),{root:o}=this._cut(this._size-h,h);this._overflow(o.next),e+=h}if(e>=i){this._safeInsert(t,s);return}this._overflow(s.slice(e)),this._safeInsert(this._size,s.slice(0,e))}_safeInsert(t,s){if(s.length<=0)return;const{root:i,size:e,tail:h}=mt(s),o=this._get(t-1);h.next=o.next,o.next=i.next,this._tail=t<this._size?this._tail:h,this._size+=e}}function _t(n,r,t=0){const s=n.length;for(let i=t>=0?t:0;i<s;++i){const e=n[i].node.levels,{next:h,span:o}=e[i];e[i]={next:h,span:o+r}}}function it(n,r){return n<=0||r<=1?1:n>=1?1/0:Math.ceil(yt(r,1/n))}function dt(n,r){let t=0;const s=R(void 0),i=[s];if(n==null||r<=0)return{root:s,size:t,tails:i};let e=1;const h=[-1];for(;n!=null&&t<r;){const o=n.levels.length;for(;e<o;)i[e]=s,h[e]=-1,++e;const _=R(n.value,o);for(let f=0;f<o;++f)i[f].levels[f]={next:_,span:t-h[f]};i.fill(_,0,o),h.fill(t,0,o);const{next:l,span:u}=n.levels[0];n=l,t+=u}for(let o=0;o<e;++o)i[o].levels[o]={next:void 0,span:r-h[o]};return{root:s,size:t,tails:i}}function Et(n,r,t){const s=R(void 0),i={root:s,size:0,tails:[s]};if(r>=t||t<=0||r>=n.size)return i;const e=V(n,r-1),h=V(n,t-1,Array.from(e));let o=e[0].index+e[0].node.levels[0].span;if(r=z(r,e[0].index,o),o=h[0].index+h[0].node.levels[0].span,t=z(t,h[0].index,o),r>=t)return i;const _=t-r;i.size=_;let l,u=e.length;for(l=0;l<u;++l){const f=e[l],y=h[l];if(f.index>=y.index)break;let w=f.node.levels[l],g=f.index+w.span-r;s.levels[l]={next:w.next,span:g},w=y.node.levels[l],g=y.index-f.index+(w.span-_),f.node.levels[l]={next:w.next,span:g},y.node.levels[l]={next:void 0,span:t-y.index},i.tails[l]=y.node}if(_t(e,-_,l),l>=u){const f=n.root.levels;for(;l>1&&f[l-1].next==null;)--l;u=l,f.length=u,n.tails.length=u}if(n.size-=_,r>=n.size)for(l=0;l<u;++l)n.tails[l]=e[l].node;return i}function*St(n){let r=0;for(;n!=null;){yield[r,n.value];const{next:t,span:s}=n.levels[0];n=t,r+=s}}function Y(n,r){if(r<0)return{index:-1,node:n.root};const t=n.tails;let s=n.size-t[0].levels[0].span;if(r>=s)return{index:s,node:t[0]};s=-1;let i,e=n.root;for(i=e.levels.length-1;i>=0&&s<r;--i){const h=n.size-t[i].levels[i].span;if(h>r)break;s=h,e=t[i]}for(;i>=0&&s<r;){const{next:h,span:o}=e.levels[i];s+o>r||h==null?--i:(s+=o,e=h)}return{index:s,node:e}}function V(n,r,t=Rt(n.root,-1)){const s=t.length;if(s<=0||r<=t[0].index)return t;const i=n.size,e=n.tails;if(r>=i-e[0].levels[0].span){for(let o=0;o<s;++o){const _=i-e[o].levels[o].span;t[o]={index:_,node:e[o]}}return t}let h;for(h=s-1;h>=0&&t[h].index<r;--h){const o=i-e[h].levels[h].span;if(o>r)break;t[h]={index:o,node:e[h]}}for(;h>=0&&t[h].index<r;){const{index:o,node:_}=t[h],{next:l,span:u}=_.levels[h];o+u<=r&&l!=null?t[h]={index:o+u,node:l}:--h}if(h>0){const{index:o,node:_}=t[h];for(let l=0;l<h;++l)t[l]={index:o,node:_}}return t}function Lt(n,r){for(;n!=null;){if(n.value===r)return!0;n=n.levels[0].next}return!1}function bt(n,r){const{root:t,size:s,tails:i}=n;for(let e=i.length;e<r;++e)t.levels[e]={next:void 0,span:s+1},i[e]=t}function Ft(n,r,t){if(t.size<=0)return;const s=t.tails.length;bt(n,s);const i=V(n,r-1);for(let e=0;e<s;++e){const h=i[e].node,o=t.tails[e],_=h.levels[e],l=o.levels[e];let u=i[e].index-r+_.span+l.span;o.levels[e]={next:_.next,span:u};const f=t.root.levels[e];u=r-i[e].index+(f.span-1),h.levels[e]={next:f.next,span:u}}if(_t(i,t.size,s),r===n.size)for(let e=0;e<s;++e)n.tails[e]=t.tails[e];n.size+=t.size}function*Ot(n){let r=0;for(;n!=null;){yield r;const{next:t,span:s}=n.levels[0];n=t,r+=s}}function Nt(n,r){let t=-1/0;const s=Math.min(n.length,r.length);for(let h=0;h<s;++h)t=t>=n[h]?t:n[h];if(t<=0||s<=0){const h=R(void 0);return{root:h,size:0,tails:[h]}}const i=R(void 0,t,s+1),e=new Array(t).fill(i);for(let h=0;h<s;++h){t=n[h];const o=s-h,_=R(r[h],t,o);for(let l=0;l<t;++l){const u=e[l].levels;u[l]={next:_,span:u[l].span-o},e[l]=_}}return{root:i,size:s,tails:e}}function R(n,r=1,t=1,s){const i=new Array(r);for(let e=0;e<r;++e)i[e]={next:s,span:t};return{value:n,levels:i}}function Rt(n,r=0){const t=n.levels.length,s=new Array(t);for(let i=0;i<t;++i)s[i]={index:r,node:n};return s}function Mt(n,r){if(!(n==null||n.levels.length<=r))for(;n!=null;){const t=n.levels[r].next;n.levels.length=r,n=t}}function*et(n){for(;n!=null;)yield n.value,n=n.levels[0].next}class T extends W{constructor(t){super();v(this,"_capacity");v(this,"_isFinite");v(this,"_maxLevel");v(this,"_p");v(this,"_root");v(this,"_size");v(this,"_tails");if(this._capacity=F,this._isFinite=!1,this._p=.5,this._maxLevel=it(this._p,F),this._root=R(void 0),this._size=0,this._tails=[this._root],t!=null){if(P(t)){this.capacity=t;return}if(!zt(t)){this.capacity=t.capacity??this._capacity,this.p=t.p??this._p;const s=t.expectedSize??this._capacity;this.maxLevel=t.maxLevel??it(this._p,s);return}for(const s of A(t,M))this._insert(this._size,s);this._capacity=this._size,this._isFinite=!0}}get capacity(){return this._isFinite?this._capacity:1/0}get levels(){return this._root.levels.length}get maxLevel(){return this._maxLevel}get p(){return this._p}get size(){return this._size}get[Symbol.toStringTag](){return T.name}set capacity(t){if(t=+t,O(t))t=F,this._isFinite=!1;else if(B(t))this._isFinite=!0;else throw new RangeError("Invalid capacity");if(this._capacity=t,this._size<=t)return;const{root:s}=this._cut(0,this._size-t);this._overflow(s.levels[0].next)}set maxLevel(t){if(t=+t,!nt(t)||t<=0)throw new RangeError("Invalid maxLevel");this._maxLevel=t,t<this.levels&&Mt(this._root,t)}set p(t){if(t=+t,isNaN(t)||t<0||t>1)throw new RangeError("Invalid p");this._p=t}at(t){if(t=p(c(t,-1/0),this._size),!I(t,0,this._size))return;const s={root:this._root,size:this._size,tails:this._tails};return Y(s,t).node.value}clear(){this._size=0,this._tails=[this._root],this._root.levels.length=1,this._root.levels[0]={next:void 0,span:1}}delete(t){return t=p(c(t,-1/0),this._size),I(t,0,this._size)?(this._cut(t,1),!0):!1}entries(){return St(this._root.levels[0].next)}fill(t,s,i){const e=this._size;if(s=z(p(c(s,0),e),0,e),i=z(p(c(i,e),e),s,e),s>=i)return this;const h={root:this._root,size:this._size,tails:this._tails};let{node:o}=Y(h,s);for(let _=s;_<i;++_)o.value=t,o=o.levels[0].next;return this}forEach(t,s){let i=this._root;for(let e=0;e<this._size;++e)i=i.levels[0].next,t.call(s,i.value,e,this)}has(t){return Lt(this._root.levels[0].next,t)}keys(){return Ot(this._root.levels[0].next)}pop(){if(this._size<=0)return;const{root:t}=this._cut(this._size-1,1);return t.levels[0].next.value}push(...t){return this._insert(this._size,t),this._size}set(t,s){if(t=p(c(t,-1/0),this._size),!I(t,0,this._size))return;const i={root:this._root,size:this._size,tails:this._tails},{node:e}=Y(i,t),h=e.value;return e.value=s,h}shift(){if(this._size<=0)return;const{root:t}=this._cut(0,1);return t.levels[0].next.value}slice(t,s){const i=this._size;t=z(p(c(t,0),i),0,i),s=z(p(c(s,i),i),t,i);const e={capacity:0,p:this._p,maxLevel:this._maxLevel};if(t>=s)return new T(e);const h={root:this._root,size:this._size,tails:this._tails},o=dt(Y(h,t).node,s-t);e.capacity=o.size;const _=new T(e);return _._root=o.root,_._tails=o.tails,_._size=o.size,_}splice(t,s,...i){const e=this._size;t=z(p(c(t,0),e),0,e),s=z(c(s,0),0,e-t);const h=this._cut(t,s);this._insert(t,i);const o=new T({capacity:s,p:this._p,maxLevel:this._maxLevel});return o._root=h.root,o._tails=h.tails,o._size=h.size,o}[Symbol.iterator](){return this.values()}unshift(...t){return this._presert(0,t),this._size}values(){return et(this._root.levels[0].next)}_cut(t,s){const i={root:this._root,size:this._size,tails:this._tails},e=Et(i,t,t+s);return this._size=i.size,this._tails=i.tails,e}_genLevels(t){const s=new Array(t),i=this._maxLevel-1;for(let e=0;e<t;++e)s[e]=1+gt(this._p,i-1);return s}_insert(t,s){const i=s.length;if(i<=0)return;if(this._capacity<=0){this._overflow(s);return}let e=this._capacity-this._size;if(e>=i){this._safeInsert(t,s);return}if(!this._isFinite)throw this._safeInsert(t,s.slice(0,e)),new Error("Out of memory");if(t>0){const o=Math.min(t,i-e),{root:_}=this._cut(0,o);this._overflow(_.levels[0].next),t-=o,e+=o}if(e>=i){this._safeInsert(t,s);return}const h=s.length-e;this._overflow(s.slice(0,h)),this._safeInsert(0,s.slice(h))}_overflow(t){if(t!=null){if(Array.isArray(t)){this._emitter.emit(x.Overflow,t);return}for(const s of A(et(t),M))this._emitter.emit(x.Overflow,s)}}_presert(t,s){const i=s.length;if(i<=0)return;if(this._capacity<=0){this._overflow(s);return}let e=this._capacity-this._size;if(e>=i){this._safeInsert(t,s);return}if(!this._isFinite)throw this._safeInsert(0,s.slice(s.length-e)),new Error("Out of memory");if(t<this._size){const h=Math.min(this._size-t,i-e),{root:o}=this._cut(this._size-h,h);this._overflow(o.levels[0].next),e+=h}if(e>=i){this._safeInsert(t,s);return}this._overflow(s.slice(e)),this._safeInsert(this._size,s.slice(0,e))}_safeInsert(t,s){const i=this._genLevels(s.length),e=Nt(i,s),h={root:this._root,size:this._size,tails:this._tails};Ft(h,t,e),this._size=h.size,this._tails=h.tails}}class D extends W{constructor(t){super();v(this,"_capacity");v(this,"_map");if(this._capacity=1/0,this._map=new Map,t=t??1/0,!O(t)){if(P(t)){if(!q(t))throw new RangeError("Invalid capacity");this._capacity=t;return}this._map=new Map(t),this._capacity=this._map.size}}get capacity(){return this._capacity}get size(){return this._map.size}get[Symbol.toStringTag](){return D.name}set capacity(t){if(t=+t,!O(t)&&!q(t))throw new RangeError("Invalid capacity");if(t===this._capacity||(this._capacity=t,this.size<=t))return;if(t===0){const e=Array.from(this._map);this.clear(),this._emitter.emit(x.Overflow,e);return}const s=[],i=this._map.entries();for(let e=this.size-t;e>0;--e){const h=i.next().value;this._map.delete(h[0]),s.push(h)}this._emitter.emit(x.Overflow,s)}clear(){this._map.clear()}delete(t){return this._map.delete(t)}entries(){return this._map.entries()}forEach(t,s){for(const[i,e]of this._map.entries())t.call(s,e,i,this)}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}set(t,s){if(this.capacity<1)return this._emitter.emit(x.Overflow,[[t,s]]),this;const i=[];if(!this._map.delete(t)&&this.size>=this.capacity){const e=this._map.entries().next().value;this._map.delete(e[0]),i.push(e)}return this._map.set(t,s),i.length>0&&this._emitter.emit(x.Overflow,i),this}[Symbol.iterator](){return this._map.entries()}values(){return this._map.values()}}class K{constructor(r){v(this,"_list");this._list=new b(r)}get capacity(){return this._list.capacity}get size(){return this._list.size}get[Symbol.toStringTag](){return K.name}set capacity(r){this._list.capacity=r}clear(){this._list.clear()}entries(){return this._list.entries()}first(){return this._list.at(0)}forEach(r,t){this._list.forEach((s,i)=>r.call(t,s,i,this),t)}front(){return this._list.at(0)}has(r){return this._list.has(r)}keys(){return this._list.keys()}push(...r){return this._list.push(...r)}shift(){return this._list.shift()}[Symbol.iterator](){return this.values()}values(){return this._list.values()}addListener(r,t){return this._list.addListener(r,t),this}on(r,t){return this._list.on(r,t),this}removeListener(r,t){return this._list.removeListener(r,t),this}}class J{constructor(r){v(this,"_list");this._list=new k(r)}get capacity(){return this._list.capacity}get size(){return this._list.size}get[Symbol.toStringTag](){return J.name}set capacity(r){this._list.capacity=r}clear(){this._list.clear()}entries(){return this._list.entries()}first(){return this._list.first()}forEach(r,t){return this._list.forEach((s,i)=>r.call(t,s,i,this))}front(){return this._list.first()}has(r){return this._list.has(r)}keys(){return this._list.keys()}push(...r){return this._list.push(...r)}shift(){return this._list.shift()}[Symbol.iterator](){return this._list.values()}values(){return this._list.values()}addListener(r,t){return this._list.addListener(r,t),this}on(r,t){return this._list.on(r,t),this}removeListener(r,t){return this._list.removeListener(r,t),this}}class U extends W{constructor(t){super();v(this,"_capacity");v(this,"_set");if(this._capacity=1/0,this._set=new Set,t=t??1/0,!O(t)){if(P(t)){if(!q(t))throw new RangeError("Invalid capacity");this._capacity=t;return}this._set=new Set(t),this._capacity=this._set.size}}get capacity(){return this._capacity}get size(){return this._set.size}get[Symbol.toStringTag](){return U.name}set capacity(t){if(t=+t,!O(t)&&!q(t))throw new RangeError("Invalid capacity");if(t===this._capacity||(this._capacity=t,this.size<=t))return;if(t===0){const e=Array.from(this._set);this.clear(),this._emitter.emit(x.Overflow,e);return}const s=[],i=this._set.values();for(let e=this.size-t;e>0;--e){const h=i.next().value;this._set.delete(h),s.push(h)}this._emitter.emit(x.Overflow,s)}add(t){if(this.capacity<1)return this._emitter.emit(x.Overflow,[t]),this;const s=[];if(!this._set.delete(t)&&this.size>=this.capacity){const i=this._set.values().next().value;this._set.delete(i),s.push(i)}return this._set.add(t),s.length>0&&this._emitter.emit(x.Overflow,s),this}clear(){this._set.clear()}delete(t){return this._set.delete(t)}entries(){return this._set.entries()}forEach(t,s){for(const i of this._set.keys())t.call(s,i,i,this)}has(t){return this._set.has(t)}keys(){return this._set.keys()}values(){return this._set.keys()}[Symbol.iterator](){return this._set.values()}}class Z{constructor(r){v(this,"_list");this._list=new E(r)}get capacity(){return this._list.capacity}get size(){return this._list.size}get[Symbol.toStringTag](){return Z.name}set capacity(r){this._list.capacity=r}clear(){this._list.clear()}entries(){return this._list.entries()}forEach(r,t){this._list.forEach((s,i)=>r.call(t,s,i,this),t)}has(r){return this._list.has(r)}keys(){return this._list.keys()}last(){return this._list.at(-1)}pop(){return this._list.pop()}push(...r){return this._list.push(...r)}[Symbol.iterator](){return this.values()}top(){return this._list.at(-1)}values(){return this._list.values()}addListener(r,t){return this._list.addListener(r,t),this}on(r,t){return this._list.on(r,t),this}removeListener(r,t){return this._list.removeListener(r,t),this}}class C{constructor(r){v(this,"_list");this._list=new k(r)}get capacity(){return this._list.capacity}get size(){return this._list.size}get[Symbol.toStringTag](){return C.name}set capacity(r){this._list.capacity=r}clear(){this._list.clear()}entries(){return this._list.entries()}forEach(r,t){return this._list.forEach((s,i)=>r.call(t,s,i,this))}has(r){return this._list.has(r)}keys(){return this._list.keys()}last(){return this._list.last()}pop(){return this._list.pop()}push(...r){return this._list.push(...r)}[Symbol.iterator](){return this._list.values()}top(){return this._list.last()}values(){return this._list.values()}addListener(r,t){return this._list.addListener(r,t),this}on(r,t){return this._list.on(r,t),this}removeListener(r,t){return this._list.removeListener(r,t),this}}exports.BoundedEvent=x;exports.CircularArrayList=k;exports.CircularDeque=H;exports.CircularDoublyLinkedList=E;exports.CircularLinkedDeque=Q;exports.CircularLinkedList=b;exports.CircularLinkedQueue=K;exports.CircularLinkedStack=Z;exports.CircularMap=D;exports.CircularQueue=J;exports.CircularSet=U;exports.CircularSkipList=T;exports.CircularStack=C;
//# sourceMappingURL=circle-ds.min.cjs.map
