/*! circle-ds
https://github.com/havelessbemore/circle-ds

MIT License

Copyright (C) 2024-2024 Michael Rojas <dev.michael.rojas@gmail.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. */
"use strict";var ot=Object.defineProperty;var lt=(n,e,t)=>e in n?ot(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var c=(n,e,t)=>(lt(n,typeof e!="symbol"?e+"":e,t),t);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const z={Overflow:"overflow"},_t={};class N{constructor(e=new _t){c(this,"_emitter");this._emitter=e}addListener(e,t){return this._emitter.addListener(e,t),this}on(e,t){return this._emitter.on(e,t),this}prependListener(e,t){return this._emitter.prependListener(e,t),this}removeListener(e,t){return this._emitter.removeListener(e,t),this}}const J=16383,T=4294967295,M=Number.MAX_SAFE_INTEGER;function W(n){return Number.isInteger(n)&&n>=0&&n<=T}function x(n){return n===Number.POSITIVE_INFINITY}function ut(n){return typeof(n==null?void 0:n[Symbol.iterator])=="function"}function at(n){return Number.isInteger(n)&&n>=0&&n<=M}function R(n){return typeof n=="number"}function d(n){return Number.isSafeInteger(n)&&n>=0}function f(n,e,t=0){return n>=t?n:n+e}function p(n,e,t){if(e>t)throw new RangeError("Invalid clamp range; min must be <= max");return n<=e?e:n<=t?n:t}function g(n,e,t){return n>=e&&n<t}function ct(n,e){return n>=0&&e>0?Math.log(n)/Math.log(e):NaN}function ft(n=.5,e=0,t=1/0,i=Math.random){for(;e<t&&i()<n;)++e;return e}function a(n,e=0){return n=+n,isNaN(n)?e:Math.trunc(n)}class S extends N{constructor(t){super();c(this,"_capacity");c(this,"_head");c(this,"_isFinite");c(this,"_next");c(this,"_size");c(this,"_vals");if(this._capacity=T,this._head=0,this._isFinite=!1,this._size=0,this._next=0,this._vals=[],!(t==null||x(t))){if(R(t)){if(!W(t))throw new RangeError("Invalid capacity");this._capacity=t,this._isFinite=!0;return}this._vals=Array.from(t),this._capacity=this._vals.length,this._isFinite=!0,this._size=this._capacity}}get capacity(){return this._isFinite?this._capacity:1/0}get size(){return this._size}get[Symbol.toStringTag](){return S.name}set capacity(t){if(t=+t,x(t))t=T,this._isFinite=!1;else if(W(t))this._isFinite=!0;else throw new RangeError("Invalid capacity");this._size<=0?(this._capacity=t,this.clear()):t<this._capacity?this.shrink(t):t>this._capacity&&this.grow(t)}at(t){if(t=f(a(t,-1/0),this._size),!!g(t,0,this._size))return this._vals[this.toIndex(t)]}clear(){this._size=0,this._head=0,this._next=0,this._vals.length=0}_copyWithin(t,i,s){if(t==i||i>=s)return;const r=this._capacity-1,h=this._vals,o=this.toRanges(i,s);if(t<=i||s<=t){t=this.toIndex(t);for(const[_,l]of o)for(let u=_;u<l;++u)h[t]=h[u],t=t<r?t+1:0}else{t=this.toIndex(t+(s-i));for(const[_,l]of o.reverse())for(let u=l-1;u>=_;--u)t=t>0?t-1:r,h[t]=h[u]}}delete(t){return t=f(a(t,-1/0),this._size),g(t,0,this._size)?(this._delete(t,1),!0):!1}_delete(t,i){this._copyWithin(t,t+i,this._size),this._pop(i)}*entries(){for(let t=0;t<this._size;++t)yield[t,this._vals[this.toIndex(t)]]}fill(t,i,s){const r=this._size;return i=p(f(a(i,0),r),0,r),s=p(f(a(s,r),r),i,r),this._fill(t,i,s),this}_fill(t,i,s){for(const[r,h]of this.toRanges(i,s))this._vals.fill(t,r,h)}first(){return this._size>0?this._vals[this._head]:void 0}forEach(t,i){const s=this._size;for(let r=0;r<s&&r<this._size;++r){const h=this._vals[this.toIndex(r)];t.call(i,h,r,this)}}has(t){const i=this._vals;for(const[s,r]of this.toRanges(0,this._size))for(let h=s;h<r;++h)if(t===i[h])return!0;return!1}*keys(){for(let t=0;t<this._size;++t)yield t}last(){return this._size>0?this._vals[this.toIndex(this._size-1)]:void 0}pop(){if(this._size<=0)return;const t=this._vals[this.toIndex(this._size-1)];return this._pop(1),t}_pop(t){const i=this._size-t;this._fill(void 0,i,this._size),this._next=this.toIndex(i),this._size=i}push(...t){return t.length<=0?this._size:this._capacity<=0?(this._overflow(t),this._size):(this._insert(this._size,t),this._size)}set(t,i){if(t=f(a(t,-1/0),this._size),!g(t,0,this._size))return;t=this.toIndex(t);const s=this._vals[t];return this._vals[t]=i,s}shift(){if(this._size<=0)return;const t=this._vals[this._head];return this._shift(1),t}_shift(t){this._fill(void 0,0,t),this._head=this.toIndex(t),this._size-=t}slice(t,i){const s=this._size;return t=p(f(a(t,0),s),0,s),i=p(f(a(i,s),s),t,s),this.toList(this._slice(t,i))}_slice(t,i){const s=this._vals,r=new Array(i-t);let h=0;for([t,i]of this.toRanges(t,i))for(let o=t;o<i;++o)r[h++]=s[o];return r}splice(t,i,...s){const r=this._size;t=p(f(a(t,0),r),0,r),i=p(a(i,0),0,r-t);const h=this.toList(this._slice(t,t+i));return this._splice(t,i,s),h}_splice(t,i,s=[]){const r=s.length,h=Math.min(i,r),o=this._vals;let _=0;for(const[l,u]of this.toRanges(t,t+h))for(let v=l;v<u;++v)o[v]=s[_++];i!=r&&(t+=h,i<r?this._insert(t,s,h):this._delete(t,i-r))}_insert(t,i,s=0,r=i.length){const h=r-s;let o=this._capacity-this._size;if(o>=h){this._safeInsert(t,i,s,r);return}if(!this._isFinite)throw this._safeInsert(t,i,s,s+o),new Error("Out of memory");if(t>0){const l=Math.min(t,h-o);this._overflow(this._slice(0,l)),this._shift(l),t-=l,o+=l}if(o>=h){this._safeInsert(t,i,s,r);return}const _=r-o;this._overflow(i.slice(s,_)),this._safePresert(0,i,_,r)}_safeInsert(t,i,s=0,r=i.length){const h=r-s,o=this._vals;this._copyWithin(t+h,t,this._size);for(const[_,l]of this.toRanges(t,t+h))for(let u=_;u<l;++u)o[u]=i[s++];this._size+=h,this._next=this.toIndex(this._size)}[Symbol.iterator](){return this.values()}unshift(...t){return t.length<=0?this._size:this._capacity<=0?(this._overflow(t),this._size):(this._presert(0,t),this._size)}_presert(t,i,s=0,r=i.length){const h=r-s;let o=this._capacity-this._size;if(o>=h){this._safePresert(t,i,s,r);return}if(!this._isFinite)throw this._safePresert(t,i,r-o,r),new Error("Out of memory");if(t<this._size){const l=Math.min(this._size-t,h-o);this._overflow(this._slice(this._size-l,this._size)),this._pop(l),o+=l}if(o>=h){this._safePresert(t,i,s,r);return}const _=s+o;this._overflow(i.slice(_,r)),this._safeInsert(this._size,i,s,_)}_safePresert(t,i,s=0,r=i.length){const h=this._capacity,o=r-s,_=this._vals,l=h-o;this._copyWithin(l,0,t),t+=l;for(const[u,v]of this.toRanges(t,t+o))for(let y=u;y<v;++y)_[y]=i[s++];this._size+=o,this._head=this.toIndex(l)}*values(){for(let t=0;t<this._size;++t)yield this._vals[this.toIndex(t)]}_overflow(t){this._emitter.emit(z.Overflow,t)}grow(t){if(this.isSequential()){this.sequentialReset(t);return}if(this._size<=this._head){const i=this._size-this._next;this._vals.copyWithin(i,0,this._next),this._vals.copyWithin(0,this._head,this._head+i),this._vals.length=this._size,this._head=0,this._next=this._size}else if(this._head+this._size<=t)this._vals.length=this._head+this._size,this._vals.copyWithin(this._capacity,0,this._next),this._vals.fill(void 0,0,this._next),this._next=(this._head+this._size)%t;else{const i=t-this._capacity;this._vals.length=t,this._vals.copyWithin(this._capacity,0,i),this._vals.copyWithin(0,i,this._next);const s=Math.max(i,this._next-i);this._vals.fill(void 0,s,this._next),this._next-=i}this._capacity=t}isSequential(){return this._head<this._next||this._next<=0}sequentialReset(t){const i=this._head+this._size;return i<=t?(this._vals.length=i,this._next=this._vals.length%t):this._head>=t?(this._vals.copyWithin(0,this._head,i),this._vals.length=this._size,this._head=0,this._next=this._size%t):(this._vals.copyWithin(0,t,i),this._vals.length=t,this._next=i-t),this._capacity=t,!0}shrink(t){if(this._size>t){const s=this._size-t;this._overflow(this._slice(0,s)),this._shift(s)}if(this.isSequential()){this.sequentialReset(t);return}const i=this._capacity-t;this._vals.copyWithin(this._head-i,this._head,this._capacity),this._vals.length=t,this._head-=i,this._capacity=t}toIndex(t){return(this._head+t)%this._capacity}toList(t){const i=new S(0);return i._vals=t,i._size=t.length,i._capacity=t.length,i}toRanges(t,i){const s=this._head,r=this._capacity-s;return i<=r?[[s+t,s+i]]:t>=r?[[t-r,i-r]]:[[s+t,this._capacity],[0,i-r]]}}class Y{constructor(e){c(this,"_list");this._list=new S(e)}get capacity(){return this._list.capacity}get size(){return this._list.size}get[Symbol.toStringTag](){return Y.name}set capacity(e){this._list.capacity=e}clear(){this._list.clear()}entries(){return this._list.entries()}first(){return this._list.first()}forEach(e,t){return this._list.forEach((i,s)=>e.call(t,i,s,this))}front(){return this._list.first()}has(e){return this._list.has(e)}keys(){return this._list.keys()}last(){return this._list.last()}pop(){return this._list.pop()}push(...e){return this._list.push(...e)}shift(){return this._list.shift()}[Symbol.iterator](){return this._list.values()}top(){return this._list.last()}unshift(...e){return this._list.unshift(...e)}values(){return this._list.values()}addListener(e,t){return this._list.addListener(e,t),this}on(e,t){return this._list.on(e,t),this}prependListener(e,t){return this._list.prependListener(e,t),this}removeListener(e,t){return this._list.removeListener(e,t),this}}function q(n,e){if(e<=0)return[void 0,void 0];const t=n.next,i=m(t,e-1);return n.next=i.next,i.next=void 0,[t,i]}function*tt(n,e){for(let t=0;n!=e;++t)yield[t,n.value],n=n.next}function m(n,e){if(!(e<0)){for(let t=0;n!=null&&t<e;++t)n=n.next;return n}}function it(n,e,t){for(;n!=t;){if(n.value===e)return!0;n=n.next}return!1}function*et(n,e){for(let t=0;n!=e;++t)yield t,n=n.next}function P(n,e){const t=[];for(;n!=e;)t.push(n.value),n=n.next;return t}function U(n){const e={};let t=0,i=e;for(const s of n)i.next={value:s},i=i.next,++t;return e.next===void 0?[void 0,void 0,0]:[e.next,i,t]}function*A(n,e){for(let t=0;n!=e;++t)yield n.value,n=n.next}function Z(n,e){if(e<=0)return[void 0,void 0];const[t,i]=q(n,e);return t.prev=void 0,n.next!=null&&(n.next.prev=n),[t,i]}function vt(n,e){if(e>=0)return m(n,e);for(let t=0;n!=null&&t>e;--t)n=n.prev;return n}function pt(n){const e={};let t=0,i=e;for(const s of n)i.next={prev:i,value:s},i=i.next,++t;return t<=0?[void 0,void 0,0]:(e.next.prev=void 0,[e.next,i,t])}class L extends N{constructor(t){super();c(this,"_capacity");c(this,"_root");c(this,"_size");if(this._capacity=1/0,this._root={value:void 0},this.clear(),t=t??1/0,x(t))return;if(R(t)){if(!d(t))throw new RangeError("Invalid capacity");this._capacity=t;return}const[i,s,r]=pt(t);this._capacity=r,r>0&&(this._root.next=i,this._root.prev=s,i.prev=this._root,s.next=this._root,this._size=r)}get capacity(){return this._capacity}get size(){return this._size}get[Symbol.toStringTag](){return L.name}set capacity(t){if(t=+t,!x(t)&&!d(t))throw new RangeError("Invalid capacity");if(this._capacity=t,this._size<=t)return;const i=this._size-t,[s,r]=Z(this._root,i);this._size-=i,this._emitter.emit(z.Overflow,P(s,r.next))}at(t){if(t=f(a(t,-1/0),this._size),!!g(t,0,this._size))return this.get(t).value}clear(){this._size=0,this._root.next=this._root,this._root.prev=this._root}delete(t){if(t=f(a(t,-1/0),this._size),!g(t,0,this._size))return!1;const i=this.get(t);return i.prev.next=i.next,i.next.prev=i.prev,--this._size,!0}entries(){return tt(this._root.next,this._root)}fill(t,i,s){i=a(i,0),i=p(f(i,this._size),0,this._size),s=a(s,this._size),s=p(f(s,this._size),0,this._size);let r=this.get(i);for(;i<s;)r.value=t,r=r.next,++i;return this}forEach(t,i){let s=this._root;for(let r=0;r<this._size;++r)s=s.next,t.call(i,s.value,r,this)}has(t){return it(this._root.next,t,this._root)}keys(){return et(this._root.next,this._root)}pop(){if(this._size<=0)return;const t=this._root.prev;return t.prev.next=t.next,t.next.prev=t.prev,--this._size,t.value}push(...t){return t.length<=0?this._size:this._capacity<=0?(this._emitter.emit(z.Overflow,t),this._size):(this.append(this._root.prev,t),this._size)}set(t,i){if(t=f(a(t,-1/0),this._size),!g(t,0,this._size))return;const s=this.get(t),r=s.value;return s.value=i,r}shift(){if(this._size<=0)return;const t=this._root.next;return t.prev.next=t.next,t.next.prev=t.prev,--this._size,t.value}slice(t,i){const s=new L;if(this._size<=0)return s;t=a(t,0),t=p(f(t,this._size),0,this._size),i=a(i,this._size),i=p(f(i,this._size),0,this._size);let r=this.get(t-1);for(;t<i;)r=r.next,s.push(r.value),++t;return s}splice(t,i,...s){const r=new L;t=a(t,0),t=p(f(t,this._size),0,this._size),i=a(i,0),i=p(i,0,this._size-t);const h=this.get(t-1);if(i>0){const[o,_]=Z(h,i);this._size-=i,o.prev=r._root,_.next=r._root,r._root.next=o,r._root.prev=_,r._size=i}return this.append(h,s),r}[Symbol.iterator](){return A(this._root.next,this._root)}unshift(...t){return t.length<=0?this._size:this._capacity<=0?(this._emitter.emit(z.Overflow,t),this._size):(this.prepend(this._root.next,t),this._size)}values(){return A(this._root.next,this._root)}append(t,i){const s=this._root,r=t.next,h=[],o=this._capacity;let _=this._size;const l=i.length;for(let u=0;u<l;++u){const v={prev:t,value:i[u]};t.next=v,t=v,_<o?++_:(h.push(s.next.value),s.next=s.next.next)}return t.next=r,r.prev=t,s.next.prev=s,h.length>0&&this._emitter.emit(z.Overflow,h),this._size=_,t}get(t){return t-=t<=this._size/2?-1:this._size,vt(this._root,t)}prepend(t,i){const s=this._root,r=t.prev,h=[],o=this._capacity;let _=this._size;for(let l=i.length-1;l>=0;--l){const u={next:t,value:i[l]};t.prev=u,t=u,_<o?++_:(h.push(s.prev.value),s.prev=s.prev.prev)}return t.prev=r,r.next=t,s.prev.next=s,h.length>0&&this._emitter.emit(z.Overflow,h.reverse()),this._size=_,t}}class G{constructor(e){c(this,"_list");this._list=new L(e)}get capacity(){return this._list.capacity}get size(){return this._list.size}get[Symbol.toStringTag](){return G.name}set capacity(e){this._list.capacity=e}first(){return this._list.at(0)}front(){return this._list.at(0)}clear(){this._list.clear()}entries(){return this._list.entries()}forEach(e,t){this._list.forEach((i,s)=>e.call(t,i,s,this),t)}has(e){return this._list.has(e)}keys(){return this._list.keys()}last(){return this._list.at(-1)}pop(){return this._list.pop()}push(...e){return this._list.push(...e)}shift(){return this._list.shift()}[Symbol.iterator](){return this.values()}top(){return this._list.at(-1)}unshift(...e){return this._list.unshift(...e)}values(){return this._list.values()}addListener(e,t){return this._list.addListener(e,t),this}on(e,t){return this._list.on(e,t),this}prependListener(e,t){return this._list.prependListener(e,t),this}removeListener(e,t){return this._list.removeListener(e,t),this}}class b extends N{constructor(t){super();c(this,"_capacity");c(this,"_root");c(this,"_size");c(this,"_tail");if(this._capacity=1/0,this._root={value:void 0},this.clear(),t=t??1/0,x(t))return;if(R(t)){if(!d(t))throw new RangeError("Invalid capacity");this._capacity=t;return}const[i,s,r]=U(t);this._capacity=r,r>0&&(this._root.next=i,this._tail=s,this._size=r)}get capacity(){return this._capacity}get size(){return this._size}get[Symbol.toStringTag](){return b.name}set capacity(t){if(t=+t,!x(t)&&!d(t))throw new RangeError("Invalid capacity");if(this._capacity=t,this._size<=t)return;const i=this._size-t,[s]=q(this._root,i);this._size-=i,this._size<=0&&(this._tail=this._root),this._emitter.emit(z.Overflow,P(s))}at(t){if(t=f(a(t,-1/0),this._size),!!g(t,0,this._size))return++t==this._size?this._tail.value:m(this._root,t).value}clear(){this._size=0,this._root.next=void 0,this._tail=this._root}delete(t){if(t=f(a(t,-1/0),this._size),!g(t,0,this._size))return!1;const i=m(this._root,t);return i.next=i.next.next,--this._size,t==this._size&&(this._tail=i),!0}entries(){return tt(this._root.next)}fill(t,i,s){i=a(i,0),i=p(f(i,this._size),0,this._size),s=a(s,this._size),s=p(f(s,this._size),0,this._size);let r=m(this._root,i+1);for(;i<s;)r.value=t,r=r.next,++i;return this}forEach(t,i){let s=this._root;for(let r=0;r<this._size;++r)s=s.next,t.call(i,s.value,r,this)}has(t){return it(this._root.next,t)}keys(){return et(this._root.next)}pop(){if(this._size<=0)return;const t=this._tail.value;return this._tail=m(this._root,--this._size),this._tail.next=void 0,t}push(...t){return t.length<=0?this._size:this._capacity<=0?(this._emitter.emit(z.Overflow,t),this._size):(this._tail=this._append(this._tail,t),this._size)}set(t,i){if(t=f(a(t,-1/0),this._size),!g(t,0,this._size))return;const s=m(this._root,t+1),r=s.value;return s.value=i,r}shift(){if(this._size<=0)return;const t=this._root.next;return this._root.next=t.next,--this._size,this._size<=0&&(this._tail=this._root),t.value}slice(t,i){const s=new b;if(this._size<=0)return s;t=a(t,0),t=p(f(t,this._size),0,this._size),i=a(i,this._size),i=p(f(i,this._size),0,this._size);let r=m(this._root,t);for(;t<i;)r=r.next,s.push(r.value),++t;return s}splice(t,i,...s){const r=new b;t=a(t,0),t=p(f(t,this._size),0,this._size),i=a(i,0),i=p(i,0,this._size-t);let h=m(this._root,t);if(i>0){const[o,_]=q(h,i);this._size-=i,r._root.next=o,r._tail=_,r._size=i}return h=this._append(h,s),h.next==null&&(this._tail=h),r}[Symbol.iterator](){return A(this._root.next)}unshift(...t){let i=t.length;if(i<=0)return this._size;const s=this._capacity;if(s<=0)return this._emitter.emit(z.Overflow,t),this._size;const r=i<=s?0:i-s;if(i-=r,this._size+i>s){this._size=s-i;const _=m(this._root,this._size);this._emitter.emit(z.Overflow,P(_.next)),_.next=void 0,this._tail=_}r>0&&(this._emitter.emit(z.Overflow,t.slice(i)),t.length=i);const[h,o]=U(t);return o.next=this._root.next,this._root.next=h,this._size<=0&&(this._tail=o),this._size+=i,this._size}values(){return A(this._root.next)}_append(t,i,s=0){const r=this._root,h=t.next,o=[],_=this._capacity;let l=this._size;const u=i.length;for(let v=s;v<u;++v){const y={value:i[v]};t.next=y,t=y,l<_?++l:(o.push(r.next.value),r.next=r.next.next)}return t.next=h,o.length>0&&this._emitter.emit(z.Overflow,o),this._size=l,t}}class V{constructor(e){c(this,"_list");this._list=new b(e)}get capacity(){return this._list.capacity}get size(){return this._list.size}get[Symbol.toStringTag](){return V.name}set capacity(e){this._list.capacity=e}clear(){this._list.clear()}entries(){return this._list.entries()}first(){return this._list.at(0)}forEach(e,t){this._list.forEach((i,s)=>e.call(t,i,s,this),t)}front(){return this._list.at(0)}has(e){return this._list.has(e)}keys(){return this._list.keys()}push(...e){return this._list.push(...e)}shift(){return this._list.shift()}[Symbol.iterator](){return this.values()}values(){return this._list.values()}addListener(e,t){return this._list.addListener(e,t),this}on(e,t){return this._list.on(e,t),this}prependListener(e,t){return this._list.prependListener(e,t),this}removeListener(e,t){return this._list.removeListener(e,t),this}}class X{constructor(e){c(this,"_list");this._list=new L(e)}get capacity(){return this._list.capacity}get size(){return this._list.size}get[Symbol.toStringTag](){return X.name}set capacity(e){this._list.capacity=e}clear(){this._list.clear()}entries(){return this._list.entries()}forEach(e,t){this._list.forEach((i,s)=>e.call(t,i,s,this),t)}has(e){return this._list.has(e)}keys(){return this._list.keys()}last(){return this._list.at(-1)}pop(){return this._list.pop()}push(...e){return this._list.push(...e)}[Symbol.iterator](){return this.values()}top(){return this._list.at(-1)}values(){return this._list.values()}addListener(e,t){return this._list.addListener(e,t),this}on(e,t){return this._list.on(e,t),this}prependListener(e,t){return this._list.prependListener(e,t),this}removeListener(e,t){return this._list.removeListener(e,t),this}}class B extends N{constructor(t){super();c(this,"_capacity");c(this,"_map");if(this._capacity=1/0,this._map=new Map,t=t??1/0,!x(t)){if(R(t)){if(!d(t))throw new RangeError("Invalid capacity");this._capacity=t;return}this._map=new Map(t),this._capacity=this._map.size}}get capacity(){return this._capacity}get size(){return this._map.size}get[Symbol.toStringTag](){return B.name}set capacity(t){if(t=+t,!x(t)&&!d(t))throw new RangeError("Invalid capacity");if(t===this._capacity||(this._capacity=t,this.size<=t))return;if(t===0){const r=Array.from(this._map);this.clear(),this._emitter.emit(z.Overflow,r);return}const i=[],s=this._map.entries();for(let r=this.size-t;r>0;--r){const h=s.next().value;this._map.delete(h[0]),i.push(h)}this._emitter.emit(z.Overflow,i)}clear(){this._map.clear()}delete(t){return this._map.delete(t)}entries(){return this._map.entries()}forEach(t,i){for(const[s,r]of this._map.entries())t.call(i,r,s,this)}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}set(t,i){if(this.capacity<1)return this._emitter.emit(z.Overflow,[[t,i]]),this;const s=[];if(!this._map.delete(t)&&this.size>=this.capacity){const r=this._map.entries().next().value;this._map.delete(r[0]),s.push(r)}return this._map.set(t,i),s.length>0&&this._emitter.emit(z.Overflow,s),this}[Symbol.iterator](){return this._map.entries()}values(){return this._map.values()}}class H{constructor(e){c(this,"list");this.list=new S(e)}get capacity(){return this.list.capacity}get size(){return this.list.size}get[Symbol.toStringTag](){return H.name}set capacity(e){this.list.capacity=e}clear(){this.list.clear()}entries(){return this.list.entries()}first(){return this.list.first()}forEach(e,t){return this.list.forEach((i,s)=>e.call(t,i,s,this))}front(){return this.list.first()}has(e){return this.list.has(e)}keys(){return this.list.keys()}push(...e){return this.list.push(...e)}shift(){return this.list.shift()}[Symbol.iterator](){return this.list.values()}values(){return this.list.values()}addListener(e,t){return this.list.addListener(e,t),this}on(e,t){return this.list.on(e,t),this}prependListener(e,t){return this.list.prependListener(e,t),this}removeListener(e,t){return this.list.removeListener(e,t),this}}class j extends N{constructor(t){super();c(this,"_capacity");c(this,"set");if(this._capacity=1/0,this.set=new Set,t=t??1/0,!x(t)){if(R(t)){if(!d(t))throw new RangeError("Invalid capacity");this._capacity=t;return}this.set=new Set(t),this._capacity=this.set.size}}get capacity(){return this._capacity}get size(){return this.set.size}get[Symbol.toStringTag](){return j.name}set capacity(t){if(t=+t,!x(t)&&!d(t))throw new RangeError("Invalid capacity");if(t===this._capacity||(this._capacity=t,this.size<=t))return;if(t===0){const r=Array.from(this.set);this.clear(),this._emitter.emit(z.Overflow,r);return}const i=[],s=this.set.values();for(let r=this.size-t;r>0;--r){const h=s.next().value;this.set.delete(h),i.push(h)}this._emitter.emit(z.Overflow,i)}add(t){if(this.capacity<1)return this._emitter.emit(z.Overflow,[t]),this;const i=[];if(!this.set.delete(t)&&this.size>=this.capacity){const s=this.set.values().next().value;this.set.delete(s),i.push(s)}return this.set.add(t),i.length>0&&this._emitter.emit(z.Overflow,i),this}clear(){this.set.clear()}delete(t){return this.set.delete(t)}entries(){return this.set.entries()}forEach(t,i){for(const s of this.set.keys())t.call(i,s,s,this)}has(t){return this.set.has(t)}keys(){return this.set.keys()}values(){return this.set.keys()}[Symbol.iterator](){return this.set.values()}}function*$(n,e){if(e<1)return;let t=[];e=Math.trunc(e);for(const i of n)t.push(i)>=e&&(yield t,t=[]);t.length>0&&(yield t)}function C(n,e){return n<=0||e<=1?1:n>=1?1/0:Math.ceil(ct(e,1/n))}function zt(n,e,t){let i=n.levels.length;const s=E(void 0,i);if(t<=0)return{root:s,size:0,tails:[s]};const r=new Array(i).fill(s),h=new Array(i).fill(-1);let o=st(n,e)[0];o=o.levels[0].next,i=1;let _=0,l=0;for(;o!=null&&_<t;){const u=o.levels.length;i=i>=u?i:u;const v=E(o.value,u);for(let w=0;w<u;++w)r[w].levels[w]={next:v,span:l-h[w]},r[w]=v,h[w]=l;const{next:y,span:I}=o.levels[0];l+=I,o=y,++_}r.length=i,s.levels.length=i,l=h[0]+1;for(let u=0;u<i;++u)r[u].levels[u]={next:void 0,span:l-h[u]};return{root:s,size:_,tails:r}}function*yt(n){for(let e=0;n!=null;++e)yield[e,n.value],n=n.levels[0].next}function E(n,e=1,t=1,i){const s=new Array(e);for(let r=0;r<e;++r)s[r]={next:i,span:t};return{value:n,levels:s}}function F(n,e){return[n,e]=st(n,e),e===0?n:void 0}function st(n,e){if(e<=0)return[n,e];let t=n.levels.length-1;for(;;){const{next:i,span:s}=n.levels[t];if(!(s<=e&&i!=null)){if(--t<0)return[n,e];continue}if(s==e)return[i,0];e-=s,n=i}}function gt(n,e){for(;n!=null;){if(n.value===e)return!0;n=n.levels[0].next}return!1}function*xt(n){for(let e=0;n!=null;++e)yield e,n=n.levels[0].next}function mt(n,e){let t=-1/0;const i=Math.min(n.length,e.length);for(let h=0;h<i;++h)t<n[h]&&(t=n[h]);if(t<=0||i<=0){const h=E(void 0);return{root:h,size:0,tails:[h]}}const s=E(void 0,t,i+1),r=new Array(t).fill(s);for(let h=0;h<i;++h){const o=i-h,_=n[h],l=E(e[h],_,o);for(let u=0;u<_;++u){const v=r[u].levels;v[u]={next:l,span:v[u].span-o},r[u]=l}}return{root:s,size:i,tails:r}}function wt(n,e){if(n==null||n.levels.length<=e)return;let t=n;for(;t!=null;){const i=t.levels[e].next;t.levels.length=e,t=i}}function*k(n){for(;n!=null;)yield n.value,n=n.levels[0].next}function dt(n){const e=n.length,t=new Array(e);for(let i=0;i<e;++i){const{index:s,node:r}=n[i];t[i]={index:s,node:r}}return t}function It(n,e,t){const i=E(void 0),s={root:i,size:0,tails:[i]};if(t<=0)return s;const r=D(rt(n.root,-1),e),h=D(dt(r),t),o=h[0].index+h[0].node.levels[0].span;let _=n.root.levels.length;e=r[0].index+r[0].node.levels[0].span,t=o-e;let l;for(l=0;l<_;++l){const u=r[l],v=h[l];if(u.index>=v.index)break;let y=u.node.levels[l],I=u.index+y.span-e;i.levels[l]={next:y.next,span:I},y=v.node.levels[l],I=v.index-u.index+(y.span-t),u.node.levels[l]={next:y.next,span:I},v.node.levels[l]={next:void 0,span:o-v.index},s.tails[l]=v.node}if(l<_)for(;l<_;){const u=r[l],{next:v,span:y}=u.node.levels[l];u.node.levels[l]={next:v,span:y-t},++l}else{const u=n.root.levels;for(;l>1&&u[l-1].next==null;)--l;_=l,u.length=_,n.tails.length=_}if(o>=n.size)for(l=0;l<_;++l)n.tails[l]=r[l].node;return n.size-=t,s.size=t,s}function rt(n,e=0){const t=n.levels.length,i=new Array(t);for(let s=0;s<t;++s)i[s]={index:e,node:n};return i}function D(n,e){if(e<=0||n.length<=0)return n;let t=n.length-1,i=n[t];const s=n[0].index+e;for(;;){const{next:r,span:h}=i.node.levels[t],o=i.index+h;if(!(o<=s&&r!=null)){if(--t<0)break;i=n[t];continue}if(i={index:o,node:r},n[t]=i,o==s)break}for(let r=0;r<t;++r)n[r]={index:i.index,node:i.node};return n}function Lt(n,e,t){if(t.size<=0)return;const i=t.tails.length;for(let h=n.tails.length;h<i;++h)n.root.levels[h]={next:void 0,span:n.size+1},n.tails[h]=n.root;const s=D(rt(n.root,-1),e);for(let h=0;h<i;++h){const o=s[h].node,_=s[h].index,l=o.levels[h],u=t.tails[h],v=u.levels[h],I=_+l.span-e,w=v.span;u.levels[h]={next:l.next,span:I+w};const K=t.root.levels[h],nt=K.span-1,ht=e-_;o.levels[h]={next:K.next,span:ht+nt}}const r=n.tails.length;for(let h=i;h<r;++h){const o=s[h].node.levels,{next:_,span:l}=o[h];o[h]={next:_,span:l+t.size}}e===n.size&&(n.tails=t.tails),n.size+=t.size}class O extends N{constructor(t){super();c(this,"_capacity");c(this,"_isFinite");c(this,"_maxLevel");c(this,"_p");c(this,"_root");c(this,"_size");c(this,"_tails");if(this._capacity=M,this._isFinite=!1,this._p=.5,this._maxLevel=C(this._p,M),this._root=E(void 0),this._size=0,this._tails=[this._root],t!=null){if(R(t)){this.capacity=t;return}if(!ut(t)){this.capacity=t.capacity??this._capacity,this.p=t.p??this._p;const i=t.expectedSize??this._capacity;this.maxLevel=t.maxLevel??C(this._p,i);return}for(const i of $(t,J))this._insert(this._size,i);this._capacity=this._size,this._isFinite=!0}}get capacity(){return this._isFinite?this._capacity:1/0}get levels(){return this._root.levels.length}get maxLevel(){return this._maxLevel}get p(){return this._p}get size(){return this._size}get[Symbol.toStringTag](){return O.name}set capacity(t){if(t=+t,x(t))t=M,this._isFinite=!1;else if(at(t))this._isFinite=!0;else throw new RangeError("Invalid capacity");if(this._capacity=t,this._size<=t)return;const{root:i}=this._cut(0,this._size-t);this._overflow(k(i.levels[0].next))}set maxLevel(t){if(t=+t,!W(t)||t<=0)throw new RangeError("Invalid maxLevel");this._maxLevel=t,t<this.levels&&wt(this._root,t)}set p(t){if(t=+t,isNaN(t)||t<0||t>1)throw new RangeError("Invalid p");this._p=t}at(t){if(t=f(a(t,-1/0),this._size),!!g(t,0,this._size))return F(this._root,t+1).value}clear(){this._size=0,this._tails=[this._root],this._root.levels.length=1,this._root.levels[0]={next:void 0,span:1}}delete(t){return t=f(a(t,-1/0),this._size),g(t,0,this._size)?(this._cut(t,1),!0):!1}entries(){return yt(this._root.levels[0].next)}fill(t,i,s){const r=this._size;if(i=p(f(a(i,0),r),0,r),s=p(f(a(s,r),r),i,r),i>=s)return this;let h=F(this._root,i+1);for(let o=i;o<s;++o)h.value=t,h=h.levels[0].next;return this}forEach(t,i){let s=this._root;for(let r=0;r<this._size;++r)s=s.levels[0].next,t.call(i,s.value,r,this)}has(t){return gt(this._root.levels[0].next,t)}keys(){return xt(this._root.levels[0].next)}pop(){if(this._size<=0)return;const{root:t}=this._cut(this._size-1,1);return t.levels[0].next.value}push(...t){return t.length<=0?this._size:this._capacity<=0?(this._overflow(t),this._size):(this._insert(this._size,t),this._size)}set(t,i){if(t=f(a(t,-1/0),this._size),!g(t,0,this._size))return;const s=F(this._root,t+1),r=s.value;return s.value=i,r}shift(){if(this._size<=0)return;const{root:t}=this._cut(0,1);return t.levels[0].next.value}slice(t,i){const s=this._size;t=p(f(a(t,0),s),0,s),i=p(f(a(i,s),s),t,s);const r=zt(this._root,t,i-t),h=new O({capacity:r.size,p:this._p,maxLevel:this._maxLevel});return h._root=r.root,h._tails=r.tails,h._size=r.size,h}splice(t,i,...s){const r=this._size;t=p(f(a(t,0),r),0,r),i=p(a(i,0),0,r-t);const h=this._cut(t,i);this._insert(t,s);const o=new O({capacity:i,p:this._p,maxLevel:this._maxLevel});return o._root=h.root,o._tails=h.tails,o._size=h.size,o}[Symbol.iterator](){return this.values()}unshift(...t){return t.length<=0?this._size:this._capacity<=0?(this._overflow(t),this._size):(this._presert(0,t),this._size)}values(){return k(this._root.levels[0].next)}_cut(t,i){const s={root:this._root,size:this._size,tails:this._tails},r=It(s,t,i);return this._size=s.size,this._tails=s.tails,r}_insert(t,i){const s=i.length;let r=this._capacity-this._size;if(r>=s){this._safeInsert(t,i);return}if(!this._isFinite)throw this._safeInsert(t,i.slice(0,r)),new Error("Out of memory");if(t>0){const o=Math.min(t,s-r),{root:_}=this._cut(0,o);this._overflow(k(_.levels[0].next)),t-=o,r+=o}if(r>=s){this._safeInsert(t,i);return}const h=i.length-r;this._overflow(i.slice(0,h)),this._safeInsert(0,i.slice(h))}_overflow(t){if(Array.isArray(t))this._emitter.emit(z.Overflow,t);else for(const i of $(t,J))this._emitter.emit(z.Overflow,i)}_presert(t,i){const s=i.length;let r=this._capacity-this._size;if(r>=s){this._safeInsert(t,i);return}if(!this._isFinite)throw this._safeInsert(0,i.slice(i.length-r)),new Error("Out of memory");if(t<this._size){const h=Math.min(this._size-t,s-r),{root:o}=this._cut(this._size-h,h);this._overflow(k(o.levels[0].next)),r+=h}if(r>=s){this._safeInsert(t,i);return}this._overflow(i.slice(r)),this._safeInsert(this._size,i.slice(0,r))}_safeInsert(t,i){const s=i.length,r=new Array(s);for(let _=0;_<s;++_)r[_]=ft(this._p,1,this._maxLevel);const h=mt(r,i),o={root:this._root,size:this._size,tails:this._tails};Lt(o,t,h),this._size=o.size,this._tails=o.tails}}class Q{constructor(e){c(this,"list");this.list=new S(e)}get capacity(){return this.list.capacity}get size(){return this.list.size}get[Symbol.toStringTag](){return Q.name}set capacity(e){this.list.capacity=e}clear(){this.list.clear()}entries(){return this.list.entries()}forEach(e,t){return this.list.forEach((i,s)=>e.call(t,i,s,this))}has(e){return this.list.has(e)}keys(){return this.list.keys()}last(){return this.list.last()}pop(){return this.list.pop()}push(...e){return this.list.push(...e)}[Symbol.iterator](){return this.list.values()}top(){return this.list.last()}values(){return this.list.values()}addListener(e,t){return this.list.addListener(e,t),this}on(e,t){return this.list.on(e,t),this}prependListener(e,t){return this.list.prependListener(e,t),this}removeListener(e,t){return this.list.removeListener(e,t),this}}exports.BoundedEvent=z;exports.CircularArrayList=S;exports.CircularDeque=Y;exports.CircularDoublyLinkedList=L;exports.CircularLinkedDeque=G;exports.CircularLinkedList=b;exports.CircularLinkedQueue=V;exports.CircularLinkedStack=X;exports.CircularMap=B;exports.CircularQueue=H;exports.CircularSet=j;exports.CircularSkipList=O;exports.CircularStack=Q;
//# sourceMappingURL=circle-ds.min.cjs.map
