/*! circle-ds
https://github.com/havelessbemore/circle-ds

Copyright (C) 2024-2024 Michael Rojas <dev.michael.rojas@gmail.com>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 */
"use strict";var v=Object.defineProperty;var f=(e,t,s)=>t in e?v(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var l=(e,t,s)=>(f(e,typeof t!="symbol"?t+"":t,s),s);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});function d(e){return typeof e=="function"}function z(e){return d(e==null?void 0:e[Symbol.iterator])}class a{constructor(t,...s){l(this,"head");l(this,"_size");l(this,"tail");l(this,"vals");this.head=0,this._size=0,this.tail=0,this.vals=[];const h=arguments.length;h<1||(h===1&&typeof t=="number"?this.vals.length=t:h===1&&z(t)?(this.vals=Array.from(t),this._size=this.vals.length):(this.vals=s,this.vals.push(t),this._size=this.vals.length,this.tail=this._size-1,this.head=this.tail))}static from(t){const s=new this(0);return s.vals=Array.from(t),s._size=s.vals.length,s}static of(...t){const s=new this(0);return s.vals=t,s._size=t.length,s}get capacity(){return this.vals.length}set capacity(t){if(t=+t,!Number.isSafeInteger(t)||t<0)throw new RangeError("Invalid capacity");const s=this.capacity;this._size<=0||t==0?(this.head=0,this.tail=0,this._size=0,this.vals.length=t):t>s?this.grow(t):t<s&&this.shrink(t)}get size(){return this._size}clear(){this.head=0,this._size=0,this.tail=0,this.vals=new Array(this.capacity)}*entries(){for(let t=0;t<this._size;++t)yield[t,this.vals[this.toInt(t)]]}forEach(t,s){const h=this._size;for(let i=0;i<h&&i<this._size;++i){const r=this.vals[this.toInt(i)];t.call(s,r,i,this)}}has(t){const s=this._size;for(let h=0;h<s&&h<this._size;++h)if(this.vals[this.toInt(h)]===t)return!0;return!1}*keys(){for(let t=0;t<this._size;++t)yield t}[Symbol.iterator](){return this.values()}*values(){for(let t=0;t<this._size;++t)yield this.vals[this.toInt(t)]}toInt(t){return(this.head+t)%this.capacity}grow(t){const s=this.capacity,h=this.head+this._size;if(this.vals.length=t,h<=s){this.tail=h;return}const i=Math.min(this.tail,t-s);this.vals.copyWithin(s,0,i),this.vals.fill(void 0,this.tail-i,i),this.vals.copyWithin(0,i,this.tail),this.vals.fill(void 0,Math.max(i,this.tail-i),this.tail),this.tail=h%t}shrink(t){this._size=Math.min(this._size,t),this.tail=this.head+this._size,this.tail<=t?(this.tail%=t,this.vals.length=t):(this.tail%=this.capacity,this.vals=Array.from(this),this.tail=this._size%t,this.head=0)}}class n extends a{front(){return this._size<=0?void 0:this.vals[this.head]}push(...t){const s=this.capacity;if(s<1)return Array.from(t);const h=t.length,i=[];for(let r=0;r<h;++r){const o=this.vals[this.tail];this.vals[this.tail]=t[r],this.tail=this.toInt(this._size+1),this._size<s?++this._size:(this.head=this.tail,i.push(o))}return i}shift(){if(this._size<1)return;const t=this.vals[this.head];return this.vals[this.head]=void 0,this.head=(this.head+1)%this.vals.length,--this._size,t}}class c extends a{pop(){if(this._size<1)return;this.tail=this.toInt(this._size-1);const t=this.vals[this.tail];return this.vals[this.tail]=void 0,--this._size,t}push(...t){const s=this.capacity;if(s<1)return Array.from(t);const h=t.length,i=[];for(let r=0;r<h;++r){const o=this.vals[this.tail];this.vals[this.tail]=t[r],this.tail=this.toInt(this._size+1),this._size<s?++this._size:(this.head=this.tail,i.push(o))}return i}top(){return this._size<=0?void 0:this.vals[this.toInt(this._size-1)]}}function _(e,t){for(const s of t){const h=s.prototype;for(const i of Object.getOwnPropertyNames(h)){const r=Object.getOwnPropertyDescriptor(h,i)??Object.create(null);Object.defineProperty(e.prototype,i,r)}}}class u extends a{back(){return this._size<=0?void 0:this.vals[this.toInt(this._size-1)]}bottom(){return this._size<=0?void 0:this.vals[this.head]}unshift(...t){const s=this.vals.length;if(s<1)return Array.from(t);const h=[];for(let i=t.length-1;i>=0;--i){this.head=(this.head-1+s)%s;const r=this.vals[this.head];this.vals[this.head]=t[i],this._size<s?++this._size:(this.tail=this.head,h.push(r))}return h.reverse()}}_(u,[n,c]);exports.CircleDeque=u;exports.CircleQueue=n;exports.CircleStack=c;exports.CircleView=a;
//# sourceMappingURL=circle-ds.min.cjs.map
